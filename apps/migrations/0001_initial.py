# Generated by Django 5.2.1 on 2025-10-08 11:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phones', models.JSONField()),
                ('emails', models.JSONField()),
                ('messengers', models.JSONField()),
                ('addresses', models.JSONField()),
                ('work_hours', models.JSONField()),
                ('seo_defaults', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=160, unique=True)),
                ('title', models.JSONField()),
                ('body', models.TextField()),
                ('tags', models.JSONField()),
                ('cover_image', models.URLField()),
                ('published_at', models.DateField()),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['slug'], name='idx_article_slug '), models.Index(fields=['published_at'], name='idx_article_published_at'), models.Index(fields=['is_published'], name='idx_article_published')],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.JSONField()),
                ('file_url', models.URLField()),
                ('order', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['order'], name='idx_certificate_order'), models.Index(fields=['is_published'], name='idx_certificate_published')],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.JSONField()),
                ('answer', models.JSONField()),
                ('order', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['order'], name='idx_faq_order'), models.Index(fields=['is_published'], name='idx_faq_published')],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('phone', models.CharField(max_length=64)),
                ('social', models.CharField(max_length=128)),
                ('message', models.TextField()),
                ('source', models.CharField(choices=[('hero', 'Hero'), ('contact', 'Contact'), ('calculator', 'Calculator')], max_length=32)),
                ('utm_json', models.JSONField()),
                ('status', models.CharField(choices=[('new', 'New'), ('in progress', 'In progress'), ('done', 'Done')], default='new', max_length=32)),
                ('taken_by_tg_user_id', models.CharField(max_length=64)),
                ('telegram_chat_id', models.CharField(max_length=64)),
                ('telegram_message_id', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['status'], name='idx_lead_status'), models.Index(fields=['source'], name='idx_lead_source'), models.Index(fields=['created_at'], name='idx_lead_created_at')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=160, unique=True)),
                ('name', models.JSONField()),
                ('description', models.JSONField()),
                ('features', models.JSONField()),
                ('image', models.URLField()),
                ('price_form', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('cold', 'Cold'), ('warm', 'Warm'), ('sandwich', 'Sandwich'), ('polycarbonate', 'Polycarbonate')], max_length=32)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['slug'], name='idx_product_slug '), models.Index(fields=['type'], name='idx_product_type'), models.Index(fields=['is_published'], name='idx_product_published')],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=160, unique=True)),
                ('title', models.JSONField()),
                ('region', models.CharField(max_length=120)),
                ('cover_image', models.URLField()),
                ('gallery', models.JSONField()),
                ('type', models.CharField(choices=[('cold', 'Cold'), ('warm', 'Warm'), ('sandwich', 'Sandwich'), ('polycarbonate', 'Polycarbonate')], max_length=32)),
                ('params', models.JSONField()),
                ('problems', models.JSONField()),
                ('solution', models.JSONField()),
                ('result', models.JSONField()),
                ('commissioned_at', models.DateField()),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['slug'], name='idx_project_slug'), models.Index(fields=['region'], name='idx_project_region'), models.Index(fields=['type'], name='idx_project_type'), models.Index(fields=['is_published'], name='idx_project_published')],
            },
        ),
    ]
